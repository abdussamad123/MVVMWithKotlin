plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id("dagger.hilt.android.plugin")
    id("androidx.navigation.safeargs.kotlin")
}

android {
    namespace 'com.mvvm'
    compileSdk 33

    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    defaultConfig {
        applicationId "com.mvvm"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding = true
    }

    buildTypes {

      /*  release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }*/
        getByName("release") {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "PRE_LOGIN_ACCESS_TOKEN", localProperties['PRE_LOGIN_ACCESS_TOKEN']
            buildConfigField "String", "BASE_URL", localProperties['BASE_URL']
       }

        getByName("debug") {
            applicationIdSuffix = ".debug"
            buildConfigField "String", "PRE_LOGIN_ACCESS_TOKEN", localProperties['PRE_LOGIN_ACCESS_TOKEN']
            buildConfigField "String", "BASE_URL", localProperties['BASE_URL']

           }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.recyclerview:recyclerview:1.3.0"

    //Datastore
    implementation("androidx.datastore:datastore-preferences:$datastore")

    //Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines")

    //Lifecycle
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle")

    //Fragment
    implementation("androidx.fragment:fragment-ktx:$fragmentversion")

    //Room
    implementation("androidx.room:room-runtime:$room")
    implementation("androidx.room:room-ktx:$room")
    kapt("androidx.room:room-compiler:$room")

    //Dagger Hilt
    implementation("com.google.dagger:hilt-android:$hiltversion")
    implementation("androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewmodel")
    kapt("com.google.dagger:hilt-android-compiler:$hiltversion")

    //Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:$navVersion")
    implementation("androidx.navigation:navigation-ui-ktx:$navVersion")

    //Retrofit
    implementation("com.squareup.retrofit2:retrofit:$retrofit")
    implementation("com.squareup.retrofit2:converter-moshi:$retrofit")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttpversion")
    implementation ("com.squareup.retrofit2:converter-scalars:$retrofitScaleConvertor")
    //Gson
    implementation("com.google.code.gson:gson:$gsonVersion")



    //Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}


kapt {
    correctErrorTypes true
}